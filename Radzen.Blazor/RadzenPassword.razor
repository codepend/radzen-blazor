@using Radzen
@using Microsoft.AspNetCore.Components.Forms
@inherits FormComponent<string>
@implements IRadzenFormComponent
@if (Visible)
{
    if(AllowPasswordReveal)
    {
        <span class="@($"rz-calendar rz-calendar-w-btn{(Disabled ? " rz-state-disabled" : "")}")" style="width:100%">
            <input @ref="@Element" name="@Name" disabled="@Disabled" readonly="@ReadOnly" style="@Style" type="@InputType" @attributes="Attributes" class="@GetCssClass()"
           placeholder="@Placeholder" autocomplete="@(AutoComplete ? "on" : "new-password")" value="@Value" @onchange="@OnChange" tabindex="@(Disabled ? "-1" : $"{TabIndex}")" id="@GetId()" />
           <button  @onclick=@ToggleShowPassword class="@($"rz-datepicker-trigger rz-calendar-button rz-button rz-button-icon-only{(Disabled ? " rz-state-disabled" : "")}")" tabindex="-1" type="button">
                <span aria-hidden="true" class="rz-button-icon-left">
                    <i class="rzi">@((MarkupString)(InputType == "password" ? "visibility" : "visibility_off"))</i>
                </span><span class="rz-button-text"></span>
            </button>
        </span>
    }
    else
    {
        <input @ref="@Element" name="@Name" disabled="@Disabled" readonly="@ReadOnly" style="@Style" type="password" @attributes="Attributes" class="@GetCssClass()"
       placeholder="@Placeholder" autocomplete="@(AutoComplete ? "on" : "new-password")" value="@Value" @onchange="@OnChange" tabindex="@(Disabled ? "-1" : $"{TabIndex}")" id="@GetId()" />
    }
    
}
