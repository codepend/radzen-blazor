@using Radzen
@using Microsoft.AspNetCore.Components.Forms
@inherits FormComponent<string>
@implements IRadzenFormComponent
@if (Visible)
{
    if(ShowPasswordReveal)
    {
        <div @ref="@Element" @attributes="Attributes" class="@GetComponentCssClass()" style="@getStyle()" id="@GetId()">
            <span class="@($"rz-calendar rz-calendar-w-btn{(Disabled ? " rz-state-disabled" : "")}")" style="width:100%;" >
                <input @ref="@input" name="@Name" disabled="@Disabled" readonly="@ReadOnly" type="@InputType" id="@Name"
                    placeholder="@Placeholder" autocomplete="@(AutoComplete ? "on" : "new-password")" value="@Value"
                    style="@Style"
                    class="rz-inputtext @InputClass @(ReadOnly ? "rz-readonly" : "")"
                    @onchange="@OnChange" tabindex="@(Disabled ? "-1" : $"{TabIndex}")"  />
                <button  @onclick=@OnToggle class="@($"rz-datepicker-trigger rz-calendar-button rz-button rz-button-icon-only{((Disabled && !AllowRevealWhenDisabled) ? " rz-state-disabled" : "")}")" disabled="@(Disabled && !AllowRevealWhenDisabled)" tabindex="-1" type="button">
                    <span aria-hidden="true" class="rz-button-icon-left">
                        <i class="rzi">@((MarkupString)(InputType == "password" ? "visibility" : "visibility_off"))</i>
                    </span>
                    <span class="rz-button-text"></span>
                </button>
            </span>
        </div>

    }
    else
    {
        <input @ref="@Element" name="@Name" disabled="@Disabled" readonly="@ReadOnly" style="@Style" type="password" @attributes="Attributes" class="@GetCssClass()"
       placeholder="@Placeholder" autocomplete="@(AutoComplete ? "on" : "new-password")" value="@Value" @onchange="@OnChange" tabindex="@(Disabled ? "-1" : $"{TabIndex}")" id="@GetId()" />
    }
    
}
