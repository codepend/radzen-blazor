@using System.Text.RegularExpressions;
@inject IJSRuntime JSRuntime
@inject CompilerService Compiler

<RadzenButton Click="Run" Icon="play_circle" />
<Monaco @bind-Value="source" />

@code {
    private ElementReference pre;
    private string source;

    [Parameter]
    public EventCallback<Type> Compiled { get; set; }

    [Parameter]
    public string PageName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var http = new HttpClient();

        source = await http.GetStringAsync($"https://raw.githubusercontent.com/radzenhq/radzen-blazor/master/RadzenBlazorDemos/Pages/{PageName}");
        source = Regex.Replace(source, "</?RadzenExample[^>]*>\n", "");
    }

    private async Task Run()
    {
        var type = await Compiler.CompileAsync(source);

        await Compiled.InvokeAsync(type);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!String.IsNullOrEmpty(source))
        {
            //await JSRuntime.InvokeAsync<object>("hljs.highlightBlock", pre);
        }
    }
}
